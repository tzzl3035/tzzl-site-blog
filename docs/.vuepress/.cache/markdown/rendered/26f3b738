{"content":"<h3 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h3>\n<p>一种用于<mark>管理元素所属集合</mark>的数据结构。</p>\n<h3 id=\"大致思想\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#大致思想\"><span>大致思想</span></a></h3>\n<p>用一个森林，以<mark>根元素</mark>区分所属集合。</p>\n<p>一般进行两种操作: <mark>合并</mark>和<mark>查询</mark>。</p>\n<h3 id=\"例题\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#例题\"><span>例题</span></a></h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P3367\" target=\"_blank\" rel=\"noopener noreferrer\">【模板】并查集</a></p>\n<h3 id=\"模板代码\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#模板代码\"><span>模板代码</span></a></h3>\n<div class=\"language-cpp line-numbers-mode\" data-ext=\"cpp\" data-title=\"cpp\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">vector</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">auto</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> find </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x26;</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">](</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">auto</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x26;</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">find</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> int</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> -></span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> int</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">  if</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ==</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> return</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">  return</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> find</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">find</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]);</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">};</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"D:/documents/Langston_code/tzzl-site-blog/docs/数据结构/并查集.md","filePathRelative":"数据结构/并查集.md","frontmatter":{"title":"并查集","createTime":"2024/12/22 18:23:53","permalink":"/article/wx4hfayr/","tags":["并查集"]},"sfcBlocks":{"template":{"type":"template","content":"<template><h3 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h3>\n<p>一种用于<mark>管理元素所属集合</mark>的数据结构。</p>\n<h3 id=\"大致思想\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#大致思想\"><span>大致思想</span></a></h3>\n<p>用一个森林，以<mark>根元素</mark>区分所属集合。</p>\n<p>一般进行两种操作: <mark>合并</mark>和<mark>查询</mark>。</p>\n<h3 id=\"例题\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#例题\"><span>例题</span></a></h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P3367\" target=\"_blank\" rel=\"noopener noreferrer\">【模板】并查集</a></p>\n<h3 id=\"模板代码\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#模板代码\"><span>模板代码</span></a></h3>\n<div class=\"language-cpp line-numbers-mode\" data-ext=\"cpp\" data-title=\"cpp\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">vector</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">auto</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> find </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x26;</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">](</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">auto</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x26;</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">find</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> int</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> -></span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> int</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">  if</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ==</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> return</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">  return</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> find</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">find</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]);</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">};</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<h3 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h3>\n<p>一种用于<mark>管理元素所属集合</mark>的数据结构。</p>\n<h3 id=\"大致思想\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#大致思想\"><span>大致思想</span></a></h3>\n<p>用一个森林，以<mark>根元素</mark>区分所属集合。</p>\n<p>一般进行两种操作: <mark>合并</mark>和<mark>查询</mark>。</p>\n<h3 id=\"例题\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#例题\"><span>例题</span></a></h3>\n<p><a href=\"https://www.luogu.com.cn/problem/P3367\" target=\"_blank\" rel=\"noopener noreferrer\">【模板】并查集</a></p>\n<h3 id=\"模板代码\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#模板代码\"><span>模板代码</span></a></h3>\n<div class=\"language-cpp line-numbers-mode\" data-ext=\"cpp\" data-title=\"cpp\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">vector</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">auto</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> find </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> [</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x26;</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">](</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">auto</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x26;</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">find</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> int</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> -></span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> int</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">  if</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ==</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> return</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">  return</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> find</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">find</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> set</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">x</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]);</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">};</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"### 简介\r\n\r\n一种用于==管理元素所属集合==的数据结构。\r\n\r\n### 大致思想\r\n\r\n用一个森林，以==根元素==区分所属集合。\r\n\r\n一般进行两种操作: ==合并==和==查询==。\r\n\r\n### 例题\r\n\r\n[【模板】并查集](https://www.luogu.com.cn/problem/P3367)\r\n\r\n### 模板代码\r\n```cpp{3-6}\r\nint n;\r\nstd::vector<int> set(n);\r\nauto find = [&](auto &find, int x) -> int {\r\n  if(set[x] == x) return x;\r\n  return find(find, set[x]);\r\n};\r\n```","excerpt":"","includedFiles":[],"tasklists":0,"title":"","headers":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"大致思想","slug":"大致思想","link":"#大致思想","children":[]},{"level":3,"title":"例题","slug":"例题","link":"#例题","children":[]},{"level":3,"title":"模板代码","slug":"模板代码","link":"#模板代码","children":[]}]}}
