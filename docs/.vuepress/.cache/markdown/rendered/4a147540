{"content":"<h3 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h3>\n<p><mark>Floyd</mark> 是一个 <mark><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></mark> 的<mark>全源最短路算法</mark>。</p>\n<h3 id=\"基本思想\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#基本思想\"><span>基本思想</span></a></h3>\n<p>类似动态规划，每次选择一个<mark>中转点</mark>，再遍历所有节点，以此进行松弛，从而算出全源最短路。</p>\n<h3 id=\"例题\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#例题\"><span>例题</span></a></h3>\n<p><a href=\"https://www.luogu.com.cn/problem/B3647\" target=\"_blank\" rel=\"noopener noreferrer\">【模板】Floyd</a></p>\n<h3 id=\"模板代码\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#模板代码\"><span>模板代码</span></a></h3>\n<div class=\"language-cpp line-numbers-mode\" data-ext=\"cpp\" data-title=\"cpp\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> m</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">103</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">103</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 需要初始化 dis</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ++</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">  for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ++</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ++</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">      dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">min</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">],</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]);</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">  }</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"D:/documents/Langston_code/tzzl-site-blog/docs/notes/图论/Floyd.md","filePathRelative":"notes/图论/Floyd.md","frontmatter":{"title":"Floyd","createTime":"2024/12/18 23:08:41","permalink":"/graph/fc72ifbr/","tags":["最短路"]},"sfcBlocks":{"template":{"type":"template","content":"<template><h3 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h3>\n<p><mark>Floyd</mark> 是一个 <mark><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></mark> 的<mark>全源最短路算法</mark>。</p>\n<h3 id=\"基本思想\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#基本思想\"><span>基本思想</span></a></h3>\n<p>类似动态规划，每次选择一个<mark>中转点</mark>，再遍历所有节点，以此进行松弛，从而算出全源最短路。</p>\n<h3 id=\"例题\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#例题\"><span>例题</span></a></h3>\n<p><a href=\"https://www.luogu.com.cn/problem/B3647\" target=\"_blank\" rel=\"noopener noreferrer\">【模板】Floyd</a></p>\n<h3 id=\"模板代码\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#模板代码\"><span>模板代码</span></a></h3>\n<div class=\"language-cpp line-numbers-mode\" data-ext=\"cpp\" data-title=\"cpp\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> m</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">103</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">103</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 需要初始化 dis</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ++</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">  for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ++</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ++</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">      dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">min</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">],</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]);</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">  }</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<h3 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h3>\n<p><mark>Floyd</mark> 是一个 <mark><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></mark> 的<mark>全源最短路算法</mark>。</p>\n<h3 id=\"基本思想\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#基本思想\"><span>基本思想</span></a></h3>\n<p>类似动态规划，每次选择一个<mark>中转点</mark>，再遍历所有节点，以此进行松弛，从而算出全源最短路。</p>\n<h3 id=\"例题\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#例题\"><span>例题</span></a></h3>\n<p><a href=\"https://www.luogu.com.cn/problem/B3647\" target=\"_blank\" rel=\"noopener noreferrer\">【模板】Floyd</a></p>\n<h3 id=\"模板代码\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#模板代码\"><span>模板代码</span></a></h3>\n<div class=\"language-cpp line-numbers-mode\" data-ext=\"cpp\" data-title=\"cpp\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> m</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">103</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">103</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 需要初始化 dis</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ++</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">  for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ++</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> ++</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">      dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">min</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">],</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> +</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> dis</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">j</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">][</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]);</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">  }</span></span>\n<span class=\"line highlighted\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"### 简介\r\n\r\n==Floyd== 是一个 ==$O(n^3)$== 的==全源最短路算法==。\r\n\r\n### 基本思想\r\n\r\n类似动态规划，每次选择一个==中转点==，再遍历所有节点，以此进行松弛，从而算出全源最短路。\r\n\r\n### 例题\r\n\r\n[【模板】Floyd](https://www.luogu.com.cn/problem/B3647)\r\n\r\n### 模板代码\r\n```cpp{3-9}\r\nint n, m, dis[103][103];\r\n// 需要初始化 dis\r\nfor(int k = 1; k <= n; ++k) {\r\n  for(int i = 1; i <= n; ++i) {\r\n    for(int j = 1; j <= n; ++j) {\r\n      dis[i][j] = std::min(dis[i][j], dis[i][k] + dis[j][k]);\r\n    }\r\n  }\r\n}\r\n```","excerpt":"","includedFiles":[],"tasklists":0,"title":"","headers":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"基本思想","slug":"基本思想","link":"#基本思想","children":[]},{"level":3,"title":"例题","slug":"例题","link":"#例题","children":[]},{"level":3,"title":"模板代码","slug":"模板代码","link":"#模板代码","children":[]}]}}
